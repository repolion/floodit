.TH "oli::FloodException" 3 "Thu Oct 19 2017" "Version Flood It by Olivier Cordier" "Flood it" \" -*- nroff -*-
.ad l
.nh
.SH NAME
oli::FloodException \- The \fBFloodException\fP class This is the exception class used for the game \&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <floodexception\&.h>\fP
.PP
Inherits exception\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFloodException\fP (const char *Msg)"
.br
.ti -1c
.RI "virtual \fB~FloodException\fP ()  throw ()"
.br
.ti -1c
.RI "const char * \fBwhat\fP () const  throw ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBFloodException\fP class This is the exception class used for the game \&. 
.PP
Definition at line 14 of file floodexception\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "oli::FloodException::FloodException (const char * Msg)\fC [inline]\fP"

.PP
Definition at line 22 of file floodexception\&.h\&.
.PP
.nf
22                                      {
23         std::ostringstream output;
24         output << Msg;
25         this->msg = output\&.str();
26     }
.fi
.SS "virtual oli::FloodException::~FloodException ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line 28 of file floodexception\&.h\&.
.PP
.nf
28 {}
.fi
.SH "Member Function Documentation"
.PP 
.SS "const char* oli::FloodException::what () const\fC [inline]\fP"

.PP
Definition at line 30 of file floodexception\&.h\&.
.PP
.nf
30                                      {
31         return msg\&.c_str();
32     }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Flood it from the source code\&.
